# [gcode_macro HEATSOAK]
# #
# # HEATSOAK
# #
# # Use the bed to preheat the chamber; the nozzle is placed just above the 
# # centre of the bed to act as a proxy for a chamber thermistor. 
# #
# # The bed heats and waits for DELAY minutes at the set temperature. After 
# # DELAY, the extruder temperature is monitored and the heatsoak doesn't 
# # complete until after the AMBIENT temperature is "reached" (i.e., when 
# # the extruder reports it is at AMBIENT).
# #
# # If you have a chamber thermistor, you can monitor that in the 
# # TEMPERATURE_WAIT instead.
# #
# # If you don't want to delay for a set amount of time and just want to wait
# # until the AMBIENT temperature is reached, you can set DELAY to 0.
# #
# description: Preheat the chamber using the bed. BED=105 AMBIENT=40 DELAY=15 (minutes)
# gcode:
#      {% set BED = params.BED|default(105)|float %}
#      {% set AMBIENT = params.AMBIENT|default(40)|float %}
#      {% set DELAY = params.DELAY|default(15)|float %}
#      {% set mid_x = printer.toolhead.axis_maximum.x|float / 2.0 %}
#      {% set mid_y = printer.toolhead.axis_maximum.y|float / 2.0 %}
#      STATUS_HEATING
#      M117 Bed:{BED}C Amb:{AMBIENT}C
#      M118 Preheating {BED}C for {DELAY} minutes
#      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
#      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}
#      HOME_IF_NEEDED
#      G0 X{mid_x} Y{mid_y} Z0.2 F2000
#      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}
#      {% set D_block = DELAY|float / 10.0  %}
#      {% for i in range(10) %}
#           {% set D_time = (DELAY|float - D_block * i|float)  %}
#           M117 Waiting {D_time} minutes...
#           M118 Waiting {D_time} minutes...
#           G4 P{D_block * 60.0 * 1000.0}
#      {% endfor %}
#      M117 Waiting for {AMBIENT}C
#      M118 Waiting for {AMBIENT}C
#      TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={AMBIENT}
#      STATUS_READY
#      M117 Heatsoak complete.
#      M118 Heatsoak complete.
#      UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=60

[gcode_macro HEATSOAK_CHAMBER]
description: Heatsoak chamber to a specific temperature with a timeout
gcode:
    {% set chamber_sensor_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].chamber_temperature_sensor_enabled %}

    {% if chamber_sensor_enabled %}
        {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}
        {% set MAXTIME = params.MAXTIME|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_chamber_max_heating_time)|int %}

        {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}

        {% for _ in range(1, MAXTIME) %}
            _WAIT_CHAMBER_TEMP TEMP={SETPOINT_TEMP}
        {% endfor %}
        {% if verbose %}
            RESPOND MSG="Chamber temperature OK !"
        {% endif %}
    {% endif %}


[gcode_macro _WAIT_CHAMBER_TEMP]
# This macro is needed to allow klipper populate a new value in the printer[...].temperature variable
# as each variables are populated only once at the beginning of every macro call
gcode:
    {% set chamber_sensor_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].chamber_temperature_sensor_enabled %}

    {% if chamber_sensor_enabled %}
        {% set chamber_sensor_name = printer["gcode_macro _USER_VARIABLES_OTHER"].chamber_temperature_sensor_name %}
        {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}
        {% set CURRENT_TEMP = printer["temperature_sensor " ~ chamber_sensor_name].temperature|float %}

        {% if CURRENT_TEMP <= SETPOINT_TEMP %}
            RESPOND MSG="Heating chamber: {CURRENT_TEMP} < {SETPOINT_TEMP}"
            G4 P{60000 * 1} # wait a minute and check again if called in a loop
        {% endif %}
    {% endif %}


[gcode_macro HEATSOAK_BED]
description: Heatsoak bed at specified temperature and wait for a specific amount of time
gcode:
    {% set SETPOINT_TEMP = params.TEMP|default(0)|int %}
    {% set TIME = params.SOAKTIME|default(8)|int %}

    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}

    {% if verbose %}
        RESPOND MSG="Heating up bed..."
    {% endif %}

    M190 S{SETPOINT_TEMP}

    {% if TIME > 0 %}
        {% for _ in range(1, TIME) %}
            RESPOND MSG="Heatsoak: {_} of {TIME} min"
            G4 P{60000 * 1}
        {% endfor %}
    {% else %}
        RESPOND MSG="No heatsoak needed, continue"
    {% endif %}
    
    {% if verbose %}
        RESPOND MSG="Bed temperature OK"
    {% endif %}