# PRINT_START Macro
# Make sure to replace Printer Settings > Custom G-code > Start G-cocde with the following (for PrusaSlicer/SuperSlicer):
# M104 S0 ; Stops PS/SS from sending temp waits separately
# M140 S0
# PRINT_START BED=[first_layer_bed_temperature] EXTRUDER={first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} CHAMBER=[chamber_temperature]

[gcode_macro PRINT_START]
gcode:
    ### Parameters ###

    # Extruder and bed temperatures
    {% set BED_TEMP = params.BED|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_bed_temp)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}

    # Optional Z adjustement from the slicer profile (ex. use it if you have textured vs smooth slicer profiles) 
    {% set Z_ADJUST = params.Z_ADJUST|default(0)|float %}

    # Heatsoak time of the bed in minutes and chamber temperature wanted
    {% set SOAK = params.SOAK|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_soak)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_chamber_temp)|int %}
    {% set CHAMBER_MAXTIME = params.CHAMBER_MAXTIME|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_chamber_max_heating_time)|int %}

    # Default material type to 'ABS'
    {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_material)|string %}

    # Get bounding box of the first layer
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}

    ### End Parameters ###

    ### Set Vars ###

    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
    {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_bucket_xyz|map('float') %}
    
    # Set light intensity while printing
    {% set light_intensity_start_print = printer["gcode_macro _USER_VARIABLES_OTHER"].light_intensity_start_print %}
    {% set light_intensity_printing = printer["gcode_macro _USER_VARIABLES_OTHER"].light_intensity_printing %}
    
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_and_brush_enabled %}
    {% set chamber_sensor_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].chamber_temperature_sensor_enabled %}
    {% set zcalib_plugin_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].zcalib_plugin_enabled %}
    {% set force_homing_in_start_print = printer["gcode_macro _USER_VARIABLES_OTHER"].force_homing_in_start_print %}
    
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    
    ### End Set Vars ###

    WAKEUP

    M118 Configuring for {MATERIAL}

    {% if (MATERIAL == "PLA") %}
        underglow_set RED=0 GREEN=255 BLUE=0
    {% elif (MATERIAL == "PETG") %}
        underglow_set RED=0 GREEN=0 BLUE=255
    {% elif (MATERIAL == "ABS") %}
        underglow_set RED=255 GREEN=0 BLUE=0
    {% elif (MATERIAL == "TPU") %}
        underglow_set RED=255 GREEN=255 BLUE=0
    {% else %}
        underglow_set RED=255 GREEN=255 BLUE=255
    {% endif %}

    STATUS_BUSY
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    SET_DISPLAY_TEXT MSG="Start up..."
    {% if light_enabled %}
        LIGHT_ON S={light_intensity_start_print}
    {% endif %}
    G21          ; set to mm
    M220 S100	 ; set print speed to 100%
    M221 S100	 ; set flow rate to 100%
    M107         ; disable fans


    # 1 ----- Home ----------------------------------
    # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
    STATUS_HOMING         # Sets SB-leds to homing-mode
    G28                   # Full home (XYZ)
    G90                   # Absolute position
    
    # Goes to center of the bed
    SET_DISPLAY_TEXT MSG="Pre-print park"           # Displays info
    G1 X{max_x|int / 2} Y{max_y|int / 2} Z110 F{St}


    # 2 ----- Bed HEATSOAK ----------------------------------
    SET_DISPLAY_TEXT MSG="Heating Bed: {BED_TEMP}c"           # Displays info
    STATUS_HEATING                                    # Sets SB-leds to heating-mode
    {% if (SOAK > 0) and (printer.heater_bed.target < (BED_TEMP - 8)) %}
        # If the machine is equiped by a chamber temperature sensor and a recirculating filter (check is automatic under the hood),
        # then we look if a specific chamber temperature is needed and we power on the recirculating filter to spread the heat
        {% if CHAMBER_TEMP > 0 %}
            START_FILTER SPEED=1
        {% endif %}
        # Put the bed temperature target and wait for the soak
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME={SOAK}
    {% else %}  
        # If the machine is equiped by a chamber temperature sensor and a recirculating filter (check is automatic under the hood),
        # then we look if a specific chamber temperature is needed and we power on the recirculating filter to spread the heat
        {% if CHAMBER_TEMP > 0 %}
            START_FILTER SPEED=1
        {% endif %}
        # Only heat the bed to the target and continue
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME=0
    {% endif %}


    # 3 ----- CHAMBER HEATSOAK ----------------------------------
    # If a setpoint is defined and a sensor available, then we wait to reach the chamber temperature (with a timeout in case it's winter...)
    # We heat up the extruder a little bit to speed up the process by using the hotend fan. If there is one, the recirculating filter
    # is also be powered on from the previous step and kept like that to act as bed fans
    SET_DISPLAY_TEXT MSG="Heating Chamber: {CHAMBER_TEMP}c"           # Displays info
    STATUS_HEATING                                    # Sets SB-leds to heating-mode
    {% if chamber_sensor_enabled %}
        {% if CHAMBER_TEMP > 0 %}
            RESPOND MSG="Warming up chamber"
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET=100
            # Wait for the temperature of the chamber to be reached (default max: 15min)
            HEATSOAK_CHAMBER TEMP={CHAMBER_TEMP} MAXTIME={CHAMBER_MAXTIME}
        {% endif %}
    {% endif %}


     # 4 ----- QUAD GANTRY LEVELING -----------------------------
    {% if printer.quad_gantry_level.applied|lower == 'false' or force_homing_in_start_print %}
        SET_DISPLAY_TEXT MSG="QGL"
        STATUS_LEVELING
        {% if verbose %}
            RESPOND MSG="QGL..."
        {% endif %}
        QUAD_GANTRY_LEVEL
    {% endif %}


    # 5 ----- EXTRUDER Pre-HEATING ---------------------------------
    # Heat the nozzle to print temperature ontop of the purge bucket
    # and wait 30s to let the nozzle dilate and stabilize
    SET_DISPLAY_TEXT MSG="Pre-Heating Hotend: 150c"
    STATUS_HEATING
    G1 X{Px} Y{Py} Z{Pz|int + 20} F{St}
    RESPOND MSG="Heating up extruder"
    
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
    G4 P{60000 * 0.5}
    {% if verbose %}
        RESPOND MSG="Extruder temperature OK"
    {% endif %}

    # Remove ooze
    CLEAN_NOZZLE

    # perform homing after hotend heating
    G28 Z           
    
    # Fine adjustement of z offset from the slicer profile (like when using textured/smooth pei)
    SET_GCODE_OFFSET Z_ADJUST={Z_ADJUST} MOVE=1

    #For PA:
    #gaps is too high
    #corner squish is too low


    # 7 ----- MATERIAL PARAMETERS --------------------------------
    # Material dependant parameters like PA, firmware retraction, Z_offset, etc...
    RESPOND MSG="Material: {MATERIAL}"
    {% if MATERIAL == "PLA" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.0525
      #  SET_RETRACTION RETRACT_LENGTH=0.75 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif MATERIAL == "PET" %}
    #    SET_PRESSURE_ADVANCE ADVANCE=0.0650
    #    SET_GCODE_OFFSET Z_ADJUST=0.010 MOVE=1
     #   SET_RETRACTION RETRACT_LENGTH=1.4 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
    {% elif MATERIAL == "ABS" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.0385 #0417
    #    SET_RETRACTION RETRACT_LENGTH=0.5 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
        {% if filter_enabled %} # if a filter is available, we start it for ABS
            START_FILTER SPEED=0.8
        {% endif %}
    {% endif %}


    # 8 ----- BED MESH -------------------------------------------
    # KAMP Adaptive Mesh
    STATUS_MESHING
    BED_MESH_CALIBRATE #ADAPTIVE_MESH


    # 9 ----- EXTRUDER HEATING ---------------------------------
    # Heat the nozzle to print temperature ontop of the purge bucket
    # and wait 30s to let the nozzle dilate and stabilize
    SET_DISPLAY_TEXT MSG="Heating Hotend: {EXTRUDER_TEMP}c"
    STATUS_HEATING
    SMART_PARK
    RESPOND MSG="Heating up extruder"
    
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    G4 P{60000 * 0.5}
    {% if verbose %}
        RESPOND MSG="Extruder temperature OK"
    {% endif %}


    # 10 ----- PRINT !!! ------------------------------------------
    # Adaptive Purge, lower the lights and start the print
    SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
    STATUS_PRINTING
    {% if verbose %}
        RESPOND MSG="Printing!"
    {% endif %}

    M83                                                 ; extruder to relative mode
    G92 E0                                              ; Reset extruder
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP} ; wait for extruder temp
    VORON_PURGE

    #one last time
    #CLEAN_NOZZLE

    {% if light_enabled %}
        LIGHT_ON S={light_intensity_printing}
    {% endif %}

    G92 E0
    M400                              ; clear buffer
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    M117 Printing
    #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    