[gcode_macro _HOME_X]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}
    {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
    {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}
    {% set x_homing_backoff, y_homing_backoff = printer["gcode_macro _USER_VARIABLES_OTHER"].homing_backoff_distance_xy|map('float') %}
    {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES_OTHER"].homing_travel_speed * 60 %}

    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # wait just a second… (give StallGuard registers time to clear), then Home X
    G4 P2000
    G28 X0

    # Move away
    G1 X{x_position_endstop + x_homing_backoff} F{homing_travel_speed}
    
    # Set current for printing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}
    {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
    {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}
    {% set x_homing_backoff, y_homing_backoff = printer["gcode_macro _USER_VARIABLES_OTHER"].homing_backoff_distance_xy|map('float') %}
    {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES_OTHER"].homing_travel_speed * 60 %}

    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    
    # wait just a second… (give StallGuard registers time to clear), then Home Y
    G4 P2000
    G28 Y0

    # Move away
    G1 Y{y_position_endstop + y_homing_backoff} F{homing_travel_speed}
    
    # Set current for printing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _Home_Z]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}
    {% set z_endstop_x, z_endstop_y = printer["gcode_macro _USER_VARIABLES_OTHER"].zendstop_xy|map('float') %}
    {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES_OTHER"].homing_travel_speed * 60 %}
    {% set homing_zhop = printer["gcode_macro _USER_VARIABLES_OTHER"].homing_zhop %}
    {% set z_drop_speed = printer["gcode_macro _USER_VARIABLES_OTHER"].z_drop_speed * 60 %}

    # if x and y are not homed yet, raise error
    {% if not 'xy' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home X and Y Axis First!") }
    {% else %}
        {% if not 'z' in printer.toolhead.homed_axes %}
            {% if verbose %}
                { action_respond_info("Resetting Z position to zero") }
            {% endif %}
            SET_KINEMATIC_POSITION Z=0
        {% endif %}

        # Move tool to safe homing position and home Z axis
        # location of z endstop
        G0 X{z_endstop_x} Y{z_endstop_y} F{homing_travel_speed}
        G28 Z0
        G0 Z{homing_zhop} F{z_drop_speed}
    {% endif %}
